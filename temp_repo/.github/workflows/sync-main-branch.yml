# name: Sync Main Branch Updated

# on:
#   pull_request:
#     types:
#       - closed

# jobs:
#   sync-main-branch:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout proteinreport repo
#         uses: actions/checkout@v2

#       - name: Merge main into sync-public-repo
#         run: |
#           # Set up Git configuration
#           git config --global user.email "ronodevs@gmail.com"
#           git config --global user.name "ronopixels"

#           # Clone sync-public-repo
#           # git clone https://github.com/ronopixels/sync-public-repo.git
#           git clone git@github.com:ronopixels/sync-public-repo.git

#           # Navigate into sync-public-repo directory
#           cd sync-public-repo

#           # Fetch changes
#           git fetch origin

#           # Merge main from proteinreport
#           git merge origin/main --no-edit

#           # Push changes back to sync-public-repo
#           git push origin main

#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Sync Main Branch

# permissions:
#   contents: write

# on:
#   pull_request:
#     types:
#       - closed

# jobs:
#   sync-main-branch:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'main'
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout proteinreport repo
#         uses: actions/checkout@v2

#       - name: Set up Git
#         run: |
#           git config --global user.email "ronodevs@gmail.com"
#           git config --global user.name "ronopixels"

#       - name: Merge main into sync-public-repo
#         run: |
#           # Clone sync-public-repo
#           git clone https://github.com/ronopixels/sync-public-repo.git

#           # Navigate into sync-public-repo directory
#           cd sync-public-repo

#           # Fetch changes
#           git fetch origin

#           # Merge main from proteinreport
#           git merge origin/main --no-edit

#           # Set up Git configuration for push
#           git config user.email "ronodevs@gmail.com"
#           git config user.name "ronopixels"

#           # Configure Git to use the PAT for authentication
#           git remote set-url origin git@github.com:ronopixels/sync-public-repo.git

#           # Push changes back to sync-public-repo using SSH and PAT
#           git push origin main

#     env:
#       PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

# name: Auto Sync Public Repo

# on:
#   push:
#     branches:
#       - main

# jobs:
#   merge_to_public:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Merge to Public Repo
#         run: |
#           git remote add public-repo https://github.com/ronopixels/sync-public-repo.git
#           git fetch public-repo
#           git checkout -B main public-repo/main
#           git merge main --no-edit
#           git push public-repo HEAD:main
#         env:
#           PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}

name: Sync to Public Repo

on:
  pull_request:
    types:
      - closed

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.email "ronodevs@gmail.com"
          git config --global user.name "ronopixels"

      - name: Merge and push to public repo
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
        run: |
          git remote add public-repo https://github.com/ronopixels/ProteinReportPublic.git
          git fetch public-repo
          git checkout main
          git merge public-repo/main --allow-unrelated-histories -m "Merge changes from ProteinReport" || true
          git push public-repo main
